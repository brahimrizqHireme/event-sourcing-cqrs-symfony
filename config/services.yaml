# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    MONGODB_URL: '%env(MONGODB_URL)%'
    MONGODB_DB:  '%env(MONGODB_DB)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
    _instanceof:
        App\Domain\CQRS\Command\CommandHandlerInterface:
            tags:
                - { name: messenger.message_handler, bus: command.bus }
        App\Domain\CQRS\Query\QueryHandlerInterface:
            tags:
                - { name: messenger.message_handler, bus: query.bus }
#        bind:
#            string $mongodbUrl : '%MONGODB_URL%'
#            string $mongodbDb : '%MONGODB_DB%'
    # makes classes in src/ available to be used as services
    # this creates TabRepositorya service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    App\Domain\Db\MongodbClient:
        factory: [null, 'create']
        arguments:
            $mongodbUrl: '%MONGODB_URL%'
            $mongodbDb: '%MONGODB_DB%'

    App\Domain\Repository\ProductRepositoryInterface:
        # the first argument is the class and the second argument is the static method
        factory: [ '@App\Infra\ServiceFactory\ProductRepositoryFactory', 'create' ]
        arguments:
            - '@App\Domain\Db\MongodbClient'
    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
